plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'maven'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}
repositories {
    
    // for ARRP
    maven {
        url = 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/'
        content {
            includeGroup "net.devtech"
        }
    }

    // for Patchouli
    maven {
        url 'https://maven.blamejared.com'
        content {
            includeGroup "vazkii.patchouli"
        }
    }

    // for HWYLA
    maven {
        url "https://maven.tehnut.info"
        content {
            includeGroup "mcp.mobius.waila"
        }
    }


    // to build indrev
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
        content {
            includeGroup "io.github.cottonmc"
        }
    }
    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"
    }
    maven {
        name = "Technici4n"
        url = "https://raw.githubusercontent.com/Technici4n/Technici4n-maven/master/"
        content {
            includeGroup "net.fabricmc.fabric-api"
            includeGroup "dev.technici4n"
        }
    }
    maven { url "https://maven.shedaniel.me/" }
    mavenLocal()
}


dependencies {
	//to change the versions see the gradle.properties file
    modImplementation "net.fabricmc.fabric-api:fabric-transfer-api-v1:0.1.0+5216ed5d3a"
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    modImplementation group: 'net.devtech', name: 'arrp', version: '0.3.7'
    include "net.devtech:arrp:${project.arrp_version}"
    modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"
    modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"
    include "vazkii.patchouli:Patchouli:${project.patchouli_version}"
    modImplementation "mcp.mobius.waila:Hwyla:${project.hwyla_version}"
    modImplementation "io.github.prospector:modmenu:${project.mod_menu_version}"
    modApi "me.shedaniel.cloth.api:cloth-common-events-v1:${project.cloth_api_version}"
    include "me.shedaniel.cloth.api:cloth-common-events-v1:${project.cloth_api_version}"

}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}